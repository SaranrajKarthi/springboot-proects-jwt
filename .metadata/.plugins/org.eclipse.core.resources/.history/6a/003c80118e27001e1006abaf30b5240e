package com.securitySB3.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

	
	 @Bean
	    public UserDetailsService userDetailsService() {
	        UserDetails user = User.withUsername("Saran")
	                .password("123")
	                .build();
	        return new InMemoryUserDetailsManager(user);
	    }

	    @Bean
	    public SecurityFilterChain securityFilterChain(HttpSecurity httpSecurity) throws Exception {
	        return httpSecurity
	                .csrf().disable()
	                .authorizeRequests()
	                .requestMatchers("/api/register").permitAll() // Allow access to the /register endpoint without authentication
	                .requestMatchers("/api/**").authenticated() // Require authentication for all other APIs under /api
	                .and()
	                .formLogin()
	                .and()
	                .build();
	    }
////	@Bean
////	public UserDetailsService userDetailsService() {
////		UserDetails user = User.withUsername("Saran")
////				.password("123")
////				.build();
//////		return ; 
////	}
//	@Bean
//	public SecurityFilterChain securityFilterChain(HttpSecurity httpSecurity) throws Exception {
//		return httpSecurity.csrf().disable()
//				.authorizeHttpRequests().requestMatchers("/api/hello").permitAll()
//				.and()
//				.authorizeHttpRequests().requestMatchers("/api/**").authenticated()
//				.and().formLogin().and()
//				.build();
//	}
}

