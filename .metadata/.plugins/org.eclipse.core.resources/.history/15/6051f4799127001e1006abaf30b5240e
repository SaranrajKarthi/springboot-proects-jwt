package com.securitySB3.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.web.bind.annotation.RequestBody;

import com.securitySB3.entity.Register_User;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

	
	 @Bean
	    public UserDetailsService userDetailsService(PasswordEncoder encoder, @RequestBody Register_User users) {
	        UserDetails user = User.withUsername(users.getUserName())
	                .password(encoder.encode(users.getPassword()))
	                .build();
	        return new InMemoryUserDetailsManager(user);
	    }
	 @Bean
public PasswordEncoder passwordEncoder() {
	return new BCryptPasswordEncoder();
}
	    @Bean
//	    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
////	    	  return http.csrf().disable().
//	    	}
////	@Bean
////	public UserDetailsService userDetailsService() {
////		UserDetails user = User.withUsername("Saran")
////				.password("123")
////				.build();
//////		return ; 
////	}
//	@Bean
//	public SecurityFilterChain securityFilterChain(HttpSecurity httpSecurity) throws Exception {
//		return httpSecurity.csrf().disable()
//				.authorizeHttpRequests().requestMatchers("/api/hello").permitAll()
//				.and()
//				.authorizeHttpRequests().requestMatchers("/api/**").authenticated()
//				.and().formLogin().and()
//				.build();
//	}
}

